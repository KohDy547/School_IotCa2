@using Microsoft.AspNetCore.Identity
@inject ApplicationDbContext applicationDbContext
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        IdentityUser identityUser = await UserManager.FindByNameAsync(User.Identity.Name);
        int accessLevel = applicationDbContext.UserProperties
            .Where(x => x.Id == identityUser.Id)
            .Select(y => y.AccessLevel)
            .First();
        string accountType =
            (accessLevel == 1) ? "Student" :
            (accessLevel == 2) ? "Lecturer" :
            (accessLevel >= 5) ? "Admin" :
            "Unknown";
        
        <li class="nav-item">
            <a class="nav-link text-dark text-muted" style="font-size:12px;"
               asp-area="Identity">@accountType</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@User.Identity.Name</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>